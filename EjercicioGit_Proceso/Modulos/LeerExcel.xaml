<Activity mc:Ignorable="sap sap2010" x:Class="LeerExcel" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_parameters" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_parameters" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>608.666666666667,1303.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>LeerExcel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="LeerExcel" sap:VirtualizedContainerService.HintSize="618.666666666667,1238.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch Leer Excel" sap:VirtualizedContainerService.HintSize="576.666666666667,1151.33333333333" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="538,912" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="dtProyectos" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Out parameters " sap:VirtualizedContainerService.HintSize="496,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_parameters]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new dictionary (of string, Object)]</InArgument>
            </Assign.Value>
          </Assign>
          <Sequence DisplayName="Validate in_parameters" sap:VirtualizedContainerService.HintSize="496,84.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[in_parameters.ContainsKey(&quot;rutaExcel&quot;)]" DisplayName="If Contains KEY" sap:VirtualizedContainerService.HintSize="872,561.333333333333" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="526,396" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[string.IsNullOrEmpty(in_parameters(&quot;rutaExcel&quot;).ToString) OR string.IsNullOrWhiteSpace(in_parameters(&quot;rutaExcel&quot;).ToString) OR string.IsNullOrWhiteSpace(in_parameters(&quot;rutaExcel&quot;).ToString)]" DisplayName="If Null Or Empty Or Null Or White Space" sap:VirtualizedContainerService.HintSize="484,308.666666666667" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="242,112.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw DisplayName="Throw Empty, Null or White Space" Exception="[new ArgumentException (&quot;La Key: 'rutaExcel' estÃ¡ vacia o es nula o es White Space&quot;)]" sap:VirtualizedContainerService.HintSize="200,25.3333333333333" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="242,81.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="300,112.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Throw DisplayName="Throw No Key" Exception="[new ArgumentException (&quot;La Key: 'url' estÃ¡ vacia o es nula&quot;)]" sap:VirtualizedContainerService.HintSize="258,25.3333333333333" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <ui:ReadRange AddHeaders="True" DataTable="[dtProyectos]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="496,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Hoja1" WorkbookPath="C:\MÂª JosÃ© Ãlvarez\UiPath\FormacionCET\01_EjercicioGit\proyectos.xlsx">
            <ui:ReadRange.Range>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:ReadRange.Range>
          </ui:ReadRange>
          <Sequence DisplayName="Out_parameters" sap:VirtualizedContainerService.HintSize="496,446.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="out_parameters(&quot;dtProyectos&quot;)" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[out_parameters("dtProyectos")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[dtProyectos]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="out_parameters(&quot;exitStatus&quot;)" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[out_parameters("exitStatus")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[0]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="out_parameters(&quot;exitMessage&quot;)" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[out_parameters("exitMessage")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">["Lectura del excel correcta"]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="542.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="538,408.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Out_parameters" sap:VirtualizedContainerService.HintSize="496,321.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="out_parameters(&quot;exitStatus&quot;)" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[out_parameters("exitStatus")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[-1]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="out_parameters(&quot;exitMessage&quot;)" sap:VirtualizedContainerService.HintSize="434,85.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[out_parameters("exitMessage")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">["Error al leer el excel"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>